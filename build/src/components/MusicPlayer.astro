---
const playlist = [
  {
    title: "Space Beats",
    artist: "Pixabay music",
    url: "https://cdn.pixabay.com/download/audio/2022/11/22/audio_febc508520.mp3"
  },
  {
    title: "Lofi Study", 
    artist: "Pixabay music",
    url: "https://cdn.pixabay.com/download/audio/2022/05/27/audio_1808fbf07a.mp3"
  }
];
---

<div class="music-player">
  <svg class="music-note" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor">
    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 19V6l12-3v13M9 19c0 1.105-1.343 2-3 2s-3-.895-3-2 1.343-2 3-2 3 .895 3 2zm12-3c0 1.105-1.343 2-3 2s-3-.895-3-2 1.343-2 3-2 3 .895 3 2zM9 10l12-3" />
  </svg>
  <button class="play-button" aria-label="Play/Pause">
    <svg class="play-icon" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor">
      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M14.752 11.168l-3.197-2.132A1 1 0 0010 9.87v4.263a1 1 0 001.555.832l3.197-2.132a1 1 0 000-1.664z" />
      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 12a9 9 0 11-18 0 9 9 0 0118 0z" />
    </svg>
    <svg class="pause-icon hidden" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor">
      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 9v6m4-6v6m7-3a9 9 0 11-18 0 9 9 0 0118 0z" />
    </svg>
  </button>
  <div class="song-info">
    <span class="song-title">{playlist[0].title}</span>
    <span class="song-artist">{playlist[0].artist}</span>
  </div>
  <button class="next-button" aria-label="Next Track">
    <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor">
      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 5l7 7-7 7M5 5l7 7-7 7" />
    </svg>
  </button>
  <audio id="audio-player" src={playlist[0].url}></audio>
</div>

<script>
  const player = {
    button: document.querySelector('.play-button'),
    nextButton: document.querySelector('.next-button'),
    audio: document.querySelector('#audio-player') as HTMLAudioElement,
    playIcon: document.querySelector('.play-icon'),
    pauseIcon: document.querySelector('.pause-icon'),
    titleEl: document.querySelector('.song-title'),
    artistEl: document.querySelector('.song-artist'),
    currentTrack: 0,
    isPlaying: false,
    playlist: [
      {
        title: "Space Beats",
        artist: "Pixabay music",
        url: "https://cdn.pixabay.com/download/audio/2022/11/22/audio_febc508520.mp3"
      },
      {
        title: "Lofi Study",
        artist: "Pixabay music",
        url: "https://cdn.pixabay.com/download/audio/2022/05/27/audio_1808fbf07a.mp3"
      }
    ],
    updatePlayPauseIcons(isPlaying: boolean) {
      if (this.playIcon && this.pauseIcon) {
        this.playIcon.classList.toggle('hidden', isPlaying);
        this.pauseIcon.classList.toggle('hidden', !isPlaying);
      }
    }
  };

  if (player.button && player.audio && player.playIcon && player.pauseIcon) {
    player.audio.addEventListener('play', () => {
      player.isPlaying = true;
      player.updatePlayPauseIcons(true);
    });

    player.audio.addEventListener('pause', () => {
      player.isPlaying = false;
      player.updatePlayPauseIcons(false);
    });

    player.button.addEventListener('click', () => {
      if (player.audio.paused) {
        player.audio.play();
        player.isPlaying = true;
        player.updatePlayPauseIcons(true);
      } else {
        player.audio.pause();
        player.isPlaying = false;
        player.updatePlayPauseIcons(false);
      }
    });

    player.nextButton?.addEventListener('click', () => {
      player.currentTrack = (player.currentTrack + 1) % player.playlist.length;
      const track = player.playlist[player.currentTrack];
      player.audio.src = track.url;
      player.titleEl.textContent = track.title;
      player.artistEl.textContent = track.artist;
      
      // Reset play state and icons when changing tracks
      player.isPlaying = false;
      player.updatePlayPauseIcons(false);
      player.audio.pause();
    });
  }
</script>

<style>
  .music-player {
    display: flex;
    align-items: center;
    gap: 0.2rem;
    margin-left: 1rem;
    padding: 0.5rem 0.75rem;
    border-radius: 9999px;
    background: rgba(255, 255, 255, 0.1);
    backdrop-filter: blur(10px);
  }

  .play-button,
  .next-button {
    background: none;
    border: none;
    color: white;
    cursor: pointer;
    padding: 0.25rem;
    width: 2rem;
    height: 2rem;
    display: flex;
    align-items: center;
    justify-content: center;
    transition: transform 0.2s ease;
  }

  .play-button:hover,
  .next-button:hover {
    transform: scale(1.1);
  }

  .play-icon, 
  .pause-icon,
  .next-button svg {
    width: 1.5rem;
    height: 1.5rem;
  }

  .hidden {
    display: none;
  }

  .song-info {
    display: flex;
    flex-direction: column;
    line-height: 1.2;
  }

  .song-title {
    font-size: 0.875rem;
    font-weight: 500;
    color: white;
  }

  .song-artist {
    font-size: 0.75rem;
    color: rgba(255, 255, 255, 0.7);
  }

  .music-note {
    width: 1.25rem;
    height: 1.25rem;
    color: #69abe8;
    margin-right: 0.25rem;
  }

  @media (max-width: 768px) {
    .song-info {
      display: none;
    }
    
    .music-player {
      margin-left: 0.5rem;
      padding: 0.25rem;
    }
  }
</style>